@model FoodHealthModulo2.ViewModels.PlatoView

@{
    ViewBag.Title = "NewPlato";
}

<header class="masthead">
    <div class="container d-flex h-100 align-items-center">
        <div class="container-fluid rounded" style="background-color: #F5F5F5 ; margin-top: 40px">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4 style="padding-top:30px">Crear Plato</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div style="padding-top:30px" class="form-group">
                        @Html.LabelFor(model => model.Customer.CustomerId, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Customer.CustomerId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Guardar Plato" id="NewPlato" class="btn btn-success" />
                            @Html.ActionLink("Agregar Alimento", "AddFood", new { }, new { @class = "btn btn-secondary" })
                        </div>
                    </div>
                </div>

            }
            <h3> Detalle de orden</h3>
            <div class="table-responsive-lg">
                <table class="table  table-striped table-dark table-bordered">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.food.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.food.Quantity)
                        </th>
                        
                        <th></th>
                    </tr>
                    @for (int i = 0; i < Model.foods.Count; i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.foods[i].Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.foods[i].Quantity)
                            </td>
                            <td>
                                @Html.ActionLink("Editar", "Edit", new { id = Model.foods[i].FoodID }, new {@class = "btn btn-primary"}) |
                                @Html.ActionLink("Borrar", "Delete", new { id = Model.foods[i].FoodID }, new { @class = "btn btn-danger" })
                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    </div>
</header>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



