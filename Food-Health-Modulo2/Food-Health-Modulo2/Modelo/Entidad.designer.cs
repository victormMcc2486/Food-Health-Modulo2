#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="food_health_modulo2")]
	public partial class EntidadDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertalimentos(alimentos instance);
    partial void Updatealimentos(alimentos instance);
    partial void Deletealimentos(alimentos instance);
    partial void Insertchef(chef instance);
    partial void Updatechef(chef instance);
    partial void Deletechef(chef instance);
    partial void Insertclientes(clientes instance);
    partial void Updateclientes(clientes instance);
    partial void Deleteclientes(clientes instance);
    partial void Insertcocineros(cocineros instance);
    partial void Updatecocineros(cocineros instance);
    partial void Deletecocineros(cocineros instance);
    partial void Insertroles(roles instance);
    partial void Updateroles(roles instance);
    partial void Deleteroles(roles instance);
    partial void Inserttipo_alimentos(tipo_alimentos instance);
    partial void Updatetipo_alimentos(tipo_alimentos instance);
    partial void Deletetipo_alimentos(tipo_alimentos instance);
    partial void Insertusuarios(usuarios instance);
    partial void Updateusuarios(usuarios instance);
    partial void Deleteusuarios(usuarios instance);
    #endregion
		
		public EntidadDataContext() : 
				base(global::Modelo.Properties.Settings.Default.food_health_modulo2ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntidadDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<alimentos> alimentos
		{
			get
			{
				return this.GetTable<alimentos>();
			}
		}
		
		public System.Data.Linq.Table<chef> chef
		{
			get
			{
				return this.GetTable<chef>();
			}
		}
		
		public System.Data.Linq.Table<clientes> clientes
		{
			get
			{
				return this.GetTable<clientes>();
			}
		}
		
		public System.Data.Linq.Table<cocineros> cocineros
		{
			get
			{
				return this.GetTable<cocineros>();
			}
		}
		
		public System.Data.Linq.Table<roles> roles
		{
			get
			{
				return this.GetTable<roles>();
			}
		}
		
		public System.Data.Linq.Table<tipo_alimentos> tipo_alimentos
		{
			get
			{
				return this.GetTable<tipo_alimentos>();
			}
		}
		
		public System.Data.Linq.Table<usuarios> usuarios
		{
			get
			{
				return this.GetTable<usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.alimentos")]
	public partial class alimentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAlimentos;
		
		private string _nombre;
		
		private int _idTipo;
		
		private string _detalles;
		
		private EntityRef<tipo_alimentos> _tipo_alimentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAlimentosChanging(int value);
    partial void OnidAlimentosChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidTipoChanging(int value);
    partial void OnidTipoChanged();
    partial void OndetallesChanging(string value);
    partial void OndetallesChanged();
    #endregion
		
		public alimentos()
		{
			this._tipo_alimentos = default(EntityRef<tipo_alimentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlimentos", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAlimentos
		{
			get
			{
				return this._idAlimentos;
			}
			set
			{
				if ((this._idAlimentos != value))
				{
					this.OnidAlimentosChanging(value);
					this.SendPropertyChanging();
					this._idAlimentos = value;
					this.SendPropertyChanged("idAlimentos");
					this.OnidAlimentosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipo", DbType="Int NOT NULL")]
		public int idTipo
		{
			get
			{
				return this._idTipo;
			}
			set
			{
				if ((this._idTipo != value))
				{
					if (this._tipo_alimentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoChanging(value);
					this.SendPropertyChanging();
					this._idTipo = value;
					this.SendPropertyChanged("idTipo");
					this.OnidTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detalles", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string detalles
		{
			get
			{
				return this._detalles;
			}
			set
			{
				if ((this._detalles != value))
				{
					this.OndetallesChanging(value);
					this.SendPropertyChanging();
					this._detalles = value;
					this.SendPropertyChanged("detalles");
					this.OndetallesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_alimentos_alimentos", Storage="_tipo_alimentos", ThisKey="idTipo", OtherKey="idTipo", IsForeignKey=true)]
		public tipo_alimentos tipo_alimentos
		{
			get
			{
				return this._tipo_alimentos.Entity;
			}
			set
			{
				tipo_alimentos previousValue = this._tipo_alimentos.Entity;
				if (((previousValue != value) 
							|| (this._tipo_alimentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_alimentos.Entity = null;
						previousValue.alimentos.Remove(this);
					}
					this._tipo_alimentos.Entity = value;
					if ((value != null))
					{
						value.alimentos.Add(this);
						this._idTipo = value.idTipo;
					}
					else
					{
						this._idTipo = default(int);
					}
					this.SendPropertyChanged("tipo_alimentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.chef")]
	public partial class chef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idChef;
		
		private string _documento;
		
		private string _correo;
		
		private string _nombres;
		
		private string _direccion;
		
		private string _telefono;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChefChanging(int value);
    partial void OnidChefChanged();
    partial void OndocumentoChanging(string value);
    partial void OndocumentoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public chef()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idChef", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idChef
		{
			get
			{
				return this._idChef;
			}
			set
			{
				if ((this._idChef != value))
				{
					this.OnidChefChanging(value);
					this.SendPropertyChanging();
					this._idChef = value;
					this.SendPropertyChanged("idChef");
					this.OnidChefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documento", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string documento
		{
			get
			{
				return this._documento;
			}
			set
			{
				if ((this._documento != value))
				{
					this.OndocumentoChanging(value);
					this.SendPropertyChanging();
					this._documento = value;
					this.SendPropertyChanged("documento");
					this.OndocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clientes")]
	public partial class clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCliente;
		
		private string _documento;
		
		private string _correo;
		
		private string _nombres;
		
		private string _direccion;
		
		private string _telefono;
		
		private int _idUsuario;
		
		private EntityRef<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OndocumentoChanging(string value);
    partial void OndocumentoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    #endregion
		
		public clientes()
		{
			this._usuarios = default(EntityRef<usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documento", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string documento
		{
			get
			{
				return this._documento;
			}
			set
			{
				if ((this._documento != value))
				{
					this.OndocumentoChanging(value);
					this.SendPropertyChanging();
					this._documento = value;
					this.SendPropertyChanged("documento");
					this.OndocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_clientes", Storage="_usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public usuarios usuarios
		{
			get
			{
				return this._usuarios.Entity;
			}
			set
			{
				usuarios previousValue = this._usuarios.Entity;
				if (((previousValue != value) 
							|| (this._usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuarios.Entity = null;
						previousValue.clientes.Remove(this);
					}
					this._usuarios.Entity = value;
					if ((value != null))
					{
						value.clientes.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cocineros")]
	public partial class cocineros : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCocineros;
		
		private string _documento;
		
		private string _correo;
		
		private string _nombres;
		
		private string _direccion;
		
		private string _telefono;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCocinerosChanging(int value);
    partial void OnidCocinerosChanged();
    partial void OndocumentoChanging(string value);
    partial void OndocumentoChanged();
    partial void OncorreoChanging(string value);
    partial void OncorreoChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public cocineros()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCocineros", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCocineros
		{
			get
			{
				return this._idCocineros;
			}
			set
			{
				if ((this._idCocineros != value))
				{
					this.OnidCocinerosChanging(value);
					this.SendPropertyChanging();
					this._idCocineros = value;
					this.SendPropertyChanged("idCocineros");
					this.OnidCocinerosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_documento", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string documento
		{
			get
			{
				return this._documento;
			}
			set
			{
				if ((this._documento != value))
				{
					this.OndocumentoChanging(value);
					this.SendPropertyChanging();
					this._documento = value;
					this.SendPropertyChanged("documento");
					this.OndocumentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_correo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string correo
		{
			get
			{
				return this._correo;
			}
			set
			{
				if ((this._correo != value))
				{
					this.OncorreoChanging(value);
					this.SendPropertyChanging();
					this._correo = value;
					this.SendPropertyChanged("correo");
					this.OncorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRol;
		
		private string _nombreRol;
		
		private EntitySet<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnnombreRolChanging(string value);
    partial void OnnombreRolChanged();
    #endregion
		
		public roles()
		{
			this._usuarios = new EntitySet<usuarios>(new Action<usuarios>(this.attach_usuarios), new Action<usuarios>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreRol", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombreRol
		{
			get
			{
				return this._nombreRol;
			}
			set
			{
				if ((this._nombreRol != value))
				{
					this.OnnombreRolChanging(value);
					this.SendPropertyChanging();
					this._nombreRol = value;
					this.SendPropertyChanged("nombreRol");
					this.OnnombreRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_usuarios", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<usuarios> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = this;
		}
		
		private void detach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_alimentos")]
	public partial class tipo_alimentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipo;
		
		private string _nombretipo;
		
		private EntitySet<alimentos> _alimentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoChanging(int value);
    partial void OnidTipoChanged();
    partial void OnnombretipoChanging(string value);
    partial void OnnombretipoChanged();
    #endregion
		
		public tipo_alimentos()
		{
			this._alimentos = new EntitySet<alimentos>(new Action<alimentos>(this.attach_alimentos), new Action<alimentos>(this.detach_alimentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipo
		{
			get
			{
				return this._idTipo;
			}
			set
			{
				if ((this._idTipo != value))
				{
					this.OnidTipoChanging(value);
					this.SendPropertyChanging();
					this._idTipo = value;
					this.SendPropertyChanged("idTipo");
					this.OnidTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombretipo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string nombretipo
		{
			get
			{
				return this._nombretipo;
			}
			set
			{
				if ((this._nombretipo != value))
				{
					this.OnnombretipoChanging(value);
					this.SendPropertyChanging();
					this._nombretipo = value;
					this.SendPropertyChanged("nombretipo");
					this.OnnombretipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_alimentos_alimentos", Storage="_alimentos", ThisKey="idTipo", OtherKey="idTipo")]
		public EntitySet<alimentos> alimentos
		{
			get
			{
				return this._alimentos;
			}
			set
			{
				this._alimentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_alimentos(alimentos entity)
		{
			this.SendPropertyChanging();
			entity.tipo_alimentos = this;
		}
		
		private void detach_alimentos(alimentos entity)
		{
			this.SendPropertyChanging();
			entity.tipo_alimentos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _usuario;
		
		private string _clave;
		
		private int _idRol;
		
		private EntitySet<clientes> _clientes;
		
		private EntityRef<roles> _roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnusuarioChanging(string value);
    partial void OnusuarioChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    #endregion
		
		public usuarios()
		{
			this._clientes = new EntitySet<clientes>(new Action<clientes>(this.attach_clientes), new Action<clientes>(this.detach_clientes));
			this._roles = default(EntityRef<roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuarios_clientes", Storage="_clientes", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<clientes> clientes
		{
			get
			{
				return this._clientes;
			}
			set
			{
				this._clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_roles", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true)]
		public roles roles
		{
			get
			{
				return this._roles.Entity;
			}
			set
			{
				roles previousValue = this._roles.Entity;
				if (((previousValue != value) 
							|| (this._roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._roles.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._roles.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clientes(clientes entity)
		{
			this.SendPropertyChanging();
			entity.usuarios = this;
		}
		
		private void detach_clientes(clientes entity)
		{
			this.SendPropertyChanging();
			entity.usuarios = null;
		}
	}
}
#pragma warning restore 1591
